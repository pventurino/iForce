##################################################
# file: MetadataService_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /usr/bin/wsdl2py metadata.wsdl
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from MetadataService_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
checkDeployStatusRequest = GED("http://soap.sforce.com/2006/04/metadata", "checkDeployStatus").pyclass

checkDeployStatusResponse = GED("http://soap.sforce.com/2006/04/metadata", "checkDeployStatusResponse").pyclass

checkRetrieveStatusRequest = GED("http://soap.sforce.com/2006/04/metadata", "checkRetrieveStatus").pyclass

checkRetrieveStatusResponse = GED("http://soap.sforce.com/2006/04/metadata", "checkRetrieveStatusResponse").pyclass

checkStatusRequest = GED("http://soap.sforce.com/2006/04/metadata", "checkStatus").pyclass

checkStatusResponse = GED("http://soap.sforce.com/2006/04/metadata", "checkStatusResponse").pyclass

createRequest = GED("http://soap.sforce.com/2006/04/metadata", "create").pyclass

createResponse = GED("http://soap.sforce.com/2006/04/metadata", "createResponse").pyclass

deleteRequest = GED("http://soap.sforce.com/2006/04/metadata", "delete").pyclass

deleteResponse = GED("http://soap.sforce.com/2006/04/metadata", "deleteResponse").pyclass

deployRequest = GED("http://soap.sforce.com/2006/04/metadata", "deploy").pyclass

deployResponse = GED("http://soap.sforce.com/2006/04/metadata", "deployResponse").pyclass

describeMetadataRequest = GED("http://soap.sforce.com/2006/04/metadata", "describeMetadata").pyclass

describeMetadataResponse = GED("http://soap.sforce.com/2006/04/metadata", "describeMetadataResponse").pyclass

listMetadataRequest = GED("http://soap.sforce.com/2006/04/metadata", "listMetadata").pyclass

listMetadataResponse = GED("http://soap.sforce.com/2006/04/metadata", "listMetadataResponse").pyclass

retrieveRequest = GED("http://soap.sforce.com/2006/04/metadata", "retrieve").pyclass

retrieveResponse = GED("http://soap.sforce.com/2006/04/metadata", "retrieveResponse").pyclass

updateRequest = GED("http://soap.sforce.com/2006/04/metadata", "update").pyclass

updateResponse = GED("http://soap.sforce.com/2006/04/metadata", "updateResponse").pyclass


# Service Skeletons
class MetadataService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/services/Soap/m/27.0', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_checkDeployStatus(self, ps, **kw):
        request = ps.Parse(checkDeployStatusRequest.typecode)
        return request,checkDeployStatusResponse()

    soapAction[''] = 'soap_checkDeployStatus'
    root[(checkDeployStatusRequest.typecode.nspname,checkDeployStatusRequest.typecode.pname)] = 'soap_checkDeployStatus'

    def soap_checkRetrieveStatus(self, ps, **kw):
        request = ps.Parse(checkRetrieveStatusRequest.typecode)
        return request,checkRetrieveStatusResponse()

    soapAction[''] = 'soap_checkRetrieveStatus'
    root[(checkRetrieveStatusRequest.typecode.nspname,checkRetrieveStatusRequest.typecode.pname)] = 'soap_checkRetrieveStatus'

    def soap_checkStatus(self, ps, **kw):
        request = ps.Parse(checkStatusRequest.typecode)
        return request,checkStatusResponse()

    soapAction[''] = 'soap_checkStatus'
    root[(checkStatusRequest.typecode.nspname,checkStatusRequest.typecode.pname)] = 'soap_checkStatus'

    def soap_create(self, ps, **kw):
        request = ps.Parse(createRequest.typecode)
        return request,createResponse()

    soapAction[''] = 'soap_create'
    root[(createRequest.typecode.nspname,createRequest.typecode.pname)] = 'soap_create'

    def soap_delete(self, ps, **kw):
        request = ps.Parse(deleteRequest.typecode)
        return request,deleteResponse()

    soapAction[''] = 'soap_delete'
    root[(deleteRequest.typecode.nspname,deleteRequest.typecode.pname)] = 'soap_delete'

    def soap_deploy(self, ps, **kw):
        request = ps.Parse(deployRequest.typecode)
        return request,deployResponse()

    soapAction[''] = 'soap_deploy'
    root[(deployRequest.typecode.nspname,deployRequest.typecode.pname)] = 'soap_deploy'

    def soap_describeMetadata(self, ps, **kw):
        request = ps.Parse(describeMetadataRequest.typecode)
        return request,describeMetadataResponse()

    soapAction[''] = 'soap_describeMetadata'
    root[(describeMetadataRequest.typecode.nspname,describeMetadataRequest.typecode.pname)] = 'soap_describeMetadata'

    def soap_listMetadata(self, ps, **kw):
        request = ps.Parse(listMetadataRequest.typecode)
        return request,listMetadataResponse()

    soapAction[''] = 'soap_listMetadata'
    root[(listMetadataRequest.typecode.nspname,listMetadataRequest.typecode.pname)] = 'soap_listMetadata'

    def soap_retrieve(self, ps, **kw):
        request = ps.Parse(retrieveRequest.typecode)
        return request,retrieveResponse()

    soapAction[''] = 'soap_retrieve'
    root[(retrieveRequest.typecode.nspname,retrieveRequest.typecode.pname)] = 'soap_retrieve'

    def soap_update(self, ps, **kw):
        request = ps.Parse(updateRequest.typecode)
        return request,updateResponse()

    soapAction[''] = 'soap_update'
    root[(updateRequest.typecode.nspname,updateRequest.typecode.pname)] = 'soap_update'

